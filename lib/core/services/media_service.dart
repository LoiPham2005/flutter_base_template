import 'dart:io';
import 'package:flutter_base_template/core/utils/logger.dart';
import 'package:gallery_saver_plus/gallery_saver.dart';

/// ‚úÖ MediaService: D√πng ƒë·ªÉ l∆∞u ·∫£nh ho·∫∑c video v√†o th∆∞ vi·ªán (Gallery / Photos)
class MediaService {
  MediaService._internal();
  static final MediaService _instance = MediaService._internal();
  factory MediaService() => _instance;

  /// L∆∞u ·∫£nh
  /// [filePath] c√≥ th·ªÉ l√† file local ho·∫∑c URL
  /// [albumName] t√™n th∆∞ m·ª•c trong th∆∞ vi·ªán (t√πy ch·ªçn)
  Future<bool> saveImage(String filePath, {String? albumName}) async {
    try {
      Logger.info('üì∏ ƒêang l∆∞u ·∫£nh: $filePath');
      final result = await GallerySaver.saveImage(
        filePath,
        albumName: albumName ?? 'MyApp',
        toDcim: true,
      );
      if (result == true) {
        Logger.success('‚úÖ ·∫¢nh ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng!');
        return true;
      } else {
        Logger.warning('‚ö†Ô∏è Kh√¥ng th·ªÉ l∆∞u ·∫£nh.');
        return false;
      }
    } catch (e, s) {
      Logger.error('‚ùå L·ªói khi l∆∞u ·∫£nh: $e', stackTrace: s);
      return false;
    }
  }

  /// L∆∞u video
  /// [filePath] c√≥ th·ªÉ l√† file local ho·∫∑c URL
  /// [albumName] t√™n th∆∞ m·ª•c trong th∆∞ vi·ªán (t√πy ch·ªçn)
  Future<bool> saveVideo(String filePath, {String? albumName}) async {
    try {
      Logger.info('üé¨ ƒêang l∆∞u video: $filePath');
      final result = await GallerySaver.saveVideo(
        filePath,
        albumName: albumName ?? 'MyApp',
        toDcim: true,
      );
      if (result == true) {
        Logger.success('‚úÖ Video ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng!');
        return true;
      } else {
        Logger.warning('‚ö†Ô∏è Kh√¥ng th·ªÉ l∆∞u video.');
        return false;
      }
    } catch (e, s) {
      Logger.error('‚ùå L·ªói khi l∆∞u video: $e', stackTrace: s);
      return false;
    }
  }

  /// Ki·ªÉm tra file c√≥ t·ªìn t·∫°i tr∆∞·ªõc khi l∆∞u (t√πy ch·ªçn)
  Future<bool> fileExists(String path) async {
    try {
      return File(path).exists();
    } catch (_) {
      return false;
    }
  }
}
